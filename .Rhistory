plot(tree)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
plot(cur_tree)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
cur_tree
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
cur_tree
}
cur_tree <- tree(Direction~., data=train_random_forest_df %>% select(-RegionID))
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- tree(Direction~., data=train_random_forest_df %>% select(-RegionID))
cur_tree
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- tree(Direction~., data=train_random_forest_df %>% select(-RegionID))
print(cur_tree)
}
rf <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
rf
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
print(cur_tree)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions <- predict(cur_tree, newdata=i %>% select(-RegionID))
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions <- predict(cur_tree, newdata=i %>% select(-RegionID))
print(test_predictions)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions <- predict(cur_tree, newdata=i %>% select(-RegionID))
table(pred=test_predictions, observed=i$Direction)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions <- predict(cur_tree, newdata=i %>% select(-RegionID))
print(table(pred=test_predictions, observed=i$Direction))
}
vect <- split(final_df,rep(1:4,each=20))
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions <- predict(cur_tree, newdata=i %>% select(-RegionID))
print(table(pred=test_predictions, observed=i$Direction))
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions <- predict(cur_tree, newdata=i %>% select(-RegionID))
print (test_predictions)
}
library(ROCR)
install.packages("ROCR")
library(ROCR)
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions <- predict(cur_tree, newdata=i %>% select(-RegionID))
prediction(test_predictions, training_data$Direction)
}
print(test_predictions)
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions <- predict(cur_tree, newdata=i %>% select(-RegionID))
str_split(test_predictions, "\n")
prediction(test_predictions, training_data$Direction)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions <- predict(cur_tree, newdata=i %>% select(-RegionID))
str_split(test_predictions, "\n")
#prediction(test_predictions, training_data$Direction)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions <- predict(cur_tree, newdata=i %>% select(-RegionID))
print(str_split(test_predictions, "\n"))
#prediction(test_predictions, training_data$Direction)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions <- predict(cur_tree, newdata=i %>% select(-RegionID))
print(flatten(str_split(test_predictions, "\n")))
#prediction(test_predictions, training_data$Direction)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions <- predict(cur_tree, newdata=i %>% select(-RegionID))
print((test_predictions))
#prediction(test_predictions, training_data$Direction)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions <- predict(cur_tree, newdata=i %>% select(-RegionID))
print(str_split(test_predictions, " "))
#prediction(test_predictions, training_data$Direction)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions <- predict(cur_tree, newdata=i %>% select(-RegionID))
print(unlist(str_split(test_predictions, " ")))
#prediction(test_predictions, training_data$Direction)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions <- predict(cur_tree, newdata=i %>% select(-RegionID))
test_predictions <- (unlist(str_split(test_predictions, " ")))
true_predictions <- as.vector(i$Direction)
#prediction(test_predictions, training_data$Direction)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions <- predict(cur_tree, newdata=i %>% select(-RegionID))
test_predictions <- (unlist(str_split(test_predictions, " ")))
true_predictions <- as.vector(i$Direction)
print(true_predictions)
#prediction(test_predictions, training_data$Direction)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions <- predict(cur_tree, newdata=i %>% select(-RegionID))
test_predictions <- (unlist(str_split(test_predictions, " ")))
true_predictions <- as.vector(i$Direction)
print(test_predictions)
print(true_predictions)
#prediction(test_predictions, training_data$Direction)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions <- predict(cur_tree, newdata=i %>% select(-RegionID))
test_predictions <- (unlist(str_split(test_predictions, " ")))
true_predictions <- as.vector(i$Direction)
print(test_predictions)
print(true_predictions)
prediction(test_predictions, true_predictions)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_tree <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions <- predict(cur_tree, newdata=i %>% select(-RegionID))
test_predictions <- (unlist(str_split(test_predictions, " ")))
true_predictions <- as.vector(i$Direction)
print(test_predictions)
print(true_predictions)
prediction(test_predictions, i$Direction)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_forest <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
cur_tree <- tree(Direction~., data=train_random_forest_df %>% select(-RegionID))
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_forest <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
cur_tree <- tree(Direction~., data=train_random_forest_df %>% select(-RegionID))
print(cur_tree)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_forest <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
cur_tree <- tree(Direction~., data=train_random_forest_df %>% select(-RegionID))
cur_tree
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_forest <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
cur_tree <- tree(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions_forest <- predict(cur_forest, newdata=i %>% select(-RegionID))
test_predictions_tree <- predict(cur_tree, newdata=i %>% select(-RegionID))
#true_predictions <- as.vector(i$Direction)
#print(test_predictions)
#print(true_predictions)
#prediction(test_predictions, i$Direction)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_forest <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
cur_tree <- tree(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions_forest <- predict(cur_forest, newdata=i %>% select(-RegionID))
test_predictions_tree <- predict(cur_tree, newdata=i %>% select(-RegionID))
table(pred=test_predictions_forest, observed=i$Direction)
table(pred=test_predictions_tree, observed=i$Direction)
#true_predictions <- as.vector(i$Direction)
#print(test_predictions)
#print(true_predictions)
#prediction(test_predictions, i$Direction)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_forest <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
cur_tree <- tree(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions_forest <- predict(cur_forest, newdata=i %>% select(-RegionID))
test_predictions_tree <- predict(cur_tree, newdata=i %>% select(-RegionID))
print(test_predictions_tree)
table(pred=test_predictions_forest, observed=i$Direction)
table(pred=test_predictions_tree, observed=i$Direction)
#true_predictions <- as.vector(i$Direction)
#print(test_predictions)
#print(true_predictions)
#prediction(test_predictions, i$Direction)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_forest <- randomForest(Direction~., data=train_random_forest_df %>% select(-RegionID))
cur_tree <- tree(Direction~., data=train_random_forest_df %>% select(-RegionID))
test_predictions_forest <- predict(cur_forest, newdata=i %>% select(-RegionID))
test_predictions_tree <- predict(cur_tree, newdata=i %>% select(-RegionID))
print(test_predictions_tree)
#table(pred=test_predictions_forest, observed=i$Direction)
#table(pred=test_predictions_tree, observed=i$Direction)
#true_predictions <- as.vector(i$Direction)
#print(test_predictions)
#print(true_predictions)
#prediction(test_predictions, i$Direction)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_forest <- randomForest(Direction~., data=training_data %>% select(-RegionID))
cur_tree <- tree(Direction~., data=training_data %>% select(-RegionID))
test_predictions_forest <- predict(cur_forest, newdata=i %>% select(-RegionID))
test_predictions_tree <- predict(cur_tree, newdata=i %>% select(-RegionID))
print(test_predictions_tree)
#table(pred=test_predictions_forest, observed=i$Direction)
#table(pred=test_predictions_tree, observed=i$Direction)
#true_predictions <- as.vector(i$Direction)
#print(test_predictions)
#print(true_predictions)
#prediction(test_predictions, i$Direction)
}
library(randomForest)
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_forest <- randomForest(Direction~., data=training_data %>% select(-RegionID))
cur_tree <- rpart(Direction~., data=training_data %>% select(-RegionID))
test_predictions_forest <- predict(cur_forest, newdata=i %>% select(-RegionID))
test_predictions_tree <- predict(cur_tree, newdata=i %>% select(-RegionID))
print(test_predictions_tree)
#table(pred=test_predictions_forest, observed=i$Direction)
#table(pred=test_predictions_tree, observed=i$Direction)
#true_predictions <- as.vector(i$Direction)
#print(test_predictions)
#print(true_predictions)
#prediction(test_predictions, i$Direction)
}
install.packages("rpart")
library(rpart)
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_forest <- randomForest(Direction~., data=training_data %>% select(-RegionID))
cur_tree <- rpart(Direction~., data=training_data %>% select(-RegionID))
test_predictions_forest <- predict(cur_forest, newdata=i %>% select(-RegionID))
test_predictions_tree <- predict(cur_tree, newdata=i %>% select(-RegionID))
print(test_predictions_tree)
#table(pred=test_predictions_forest, observed=i$Direction)
#table(pred=test_predictions_tree, observed=i$Direction)
#true_predictions <- as.vector(i$Direction)
#print(test_predictions)
#print(true_predictions)
#prediction(test_predictions, i$Direction)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_forest <- randomForest(Direction~., data=training_data %>% select(-RegionID))
cur_tree <- tree(Direction~., data=training_data %>% select(-RegionID))
test_predictions_forest <- predict(cur_forest, newdata=i %>% select(-RegionID))
test_predictions_tree <- predict(cur_tree, newdata=i %>% select(-RegionID))
print(test_predictions_tree)
#table(pred=test_predictions_forest, observed=i$Direction)
#table(pred=test_predictions_tree, observed=i$Direction)
#true_predictions <- as.vector(i$Direction)
#print(test_predictions)
#print(true_predictions)
#prediction(test_predictions, i$Direction)
}
for (i in vect) {
#print(i)
#print(final_df%>%anti_join(i, on = 'RegionID'))
training_data <- final_df %>% anti_join(i, on='RegionID')
cur_forest <- randomForest(Direction~., data=training_data %>% select(-RegionID))
cur_tree <- tree(Direction~., data=training_data %>% select(-RegionID))
test_predictions_forest <- predict(cur_forest, newdata=i %>% select(-RegionID))
test_predictions_tree <- predict(cur_tree, newdata=i %>% select(-RegionID))
print(str_split(test_predictions_tree, " "))
#table(pred=test_predictions_forest, observed=i$Direction)
#table(pred=test_predictions_tree, observed=i$Direction)
#true_predictions <- as.vector(i$Direction)
#print(test_predictions)
#print(true_predictions)
#prediction(test_predictions, i$Direction)
}
tempdir()
library(rvest)
library(tidyverse)
coaches <- read.csv('csv/coaches.csv')
divisions <- read.csv('csv/divisions.csv')
leagues <- read.csv('csv/leagues.csv')
allstars <- read.csv('csv/league_history_all_star.csv')
players <- read.csv('csv/players.csv')
awards <- read.csv('csv/players_awards.csv')
batting_stats <- read.csv('csv/players_career_batting_stats.csv')
pitching_stats <- read.csv('csv/players_career_pitching_stats.csv')
teams <- read.csv('csv/teams.csv')
team_history_record <- read.csv('csv/team_history_record.csv')
team_history_financials <- read.csv('csv/team_history_financials.csv')
lahman <- DBI::dbConnect(RSQLite::SQLite(), "lahman2016.sqlite")
library(ggplot2)
hits_by_year <- players %>% inner_join(batting_stats, by = 'player_id') %>% filter(split_id == 1,h > 50) %>% select(player_id,first_name, last_name, sim_hits = h ,year_id = year)
hits_difference <- hits_by_year %>% inner_join(lahman_hits, on = c('first_name', 'last_name', 'year_id'))
hits_difference['dif_hits'] <- hits_difference['sim_hits'] - hits_difference['hits']
hits_difference %>% ggplot(mapping=aes(x=dif_hits)) + geom_histogram(binwidth = 5)
View(lahman_k)
View(lahman_k)
View(lahman_k)
View(lahman_k)
View(lahman_k)
View(test_frame)
View(pitching_stats)
ootp_k <- pitching_stats %>% filter(year >= 2000 && k > 50)
View(ootp_k)
ootp_k <- pitching_stats %>% filter(year >= 2000, k > 50)
View(ootp_k)
ootp_k <- pitching_stats %>% filter(year >= 2000, k > 50) %>% inner_join(players, on=player_id)
View(ootp_k)
View(players)
ootp_k <- pitching_stats %>% filter(year >= 2000, k > 50) %>% inner_join(players, on=player_id) %>% select(first_name, last_name, k, year)
final_k <- ootp_k %>% inner_join(lahman_k, on = c('first_name', 'last_name', 'year_id'))
View(final_k)
View(ootp_k)
View(lahman_k)
ootp_k <- pitching_stats %>% filter(year >= 2000, k > 50) %>% inner_join(players, on=player_id) %>% select(first_name, last_name, k, year)
final_k <- ootp_k %>% inner_join(lahman_k, on = c('first_name', 'last_name', 'year_id'))
View(final_k)
ootp_k <- pitching_stats %>% filter(year >= 2000, k > 50) %>% inner_join(players, on=player_id) %>% select(first_name, last_name, k, year)
ootp_k <- pitching_stats %>% filter(split_id = 1, k > 50) %>% inner_join(players, on=player_id) %>% select(first_name, last_name, k, year)
ootp_k <- pitching_stats %>% filter(split_id == 1, k > 50) %>% inner_join(players, on=player_id) %>% select(first_name, last_name, k, year)
View(ootp_k)
final_k <- ootp_k %>% inner_join(lahman_k, by = c('first_name', 'last_name', 'year_id'))
View(final_k)
final_k <- ootp_k %>% inner_join(lahman_k, on = c('first_name', 'last_name', 'year_id'))
ootp_k <- pitching_stats %>% filter(split_id == 1, k > 50) %>% inner_join(players, on=player_id) %>% select(first_name, last_name, k, year)
final_k <- ootp_k %>% inner_join(lahman_k, on = c('first_name', 'last_name', 'year_id'))
k_by_year <- players %>% inner_join(batting_stats, by = 'player_id') %>% filter(split_id == 1,h > 50) %>% select(player_id,first_name, last_name, sim_k = h ,year_id = year)
View(k_by_year)
View(team_history_record)
View(team_history)
View(lahman_pos)
library(rvest)
library(tidyverse)
coaches <- read.csv('csv/coaches.csv')
divisions <- read.csv('csv/divisions.csv')
leagues <- read.csv('csv/leagues.csv')
allstars <- read.csv('csv/league_history_all_star.csv')
players <- read.csv('csv/players.csv')
awards <- read.csv('csv/league_history.csv')
batting_stats <- read.csv('csv/players_career_batting_stats.csv')
pitching_stats <- read.csv('csv/players_career_pitching_stats.csv')
teams <- read.csv('csv/teams.csv')
team_history_record <- read.csv('csv/team_history_record.csv')
team_history_financials <- read.csv('csv/team_history_financials.csv')
lahman <- DBI::dbConnect(RSQLite::SQLite(), "lahman2016.sqlite")
library(ggplot2)
hits_by_year <- players %>% inner_join(batting_stats, by = 'player_id') %>%
filter(split_id == 1,h > 50) %>% select(player_id,first_name, last_name, sim_hits = h ,year_id = year)
hits_difference <- hits_by_year %>% inner_join(lahman_hits, on = c('first_name', 'last_name', 'year_id'))
hits_difference['dif_hits'] <- hits_difference['sim_hits'] - hits_difference['hits']
hits_difference %>% ggplot(mapping=aes(x=dif_hits)) + geom_histogram(binwidth = 5)
sim_pos <- team_history_record %>% inner_join(teams, by = 'team_id') %>%
select(team_id,historical_id, pos, year) %>% group_by(historical_id) %>% summarize(sim_pos=mean(pos))
diff_pos <- sim_pos %>% inner_join(lahman_pos, by = c("historical_id"="teamID"))
diff_pos['diff'] <- - diff_pos$sim_pos + diff_pos$real_pos
diff_pos %>% select(diff,historical_id) %>% arrange(desc(diff))
diff_pos %>% summarize(sd=sd(diff), mean=mean(diff))
sim_awards <- awards %>% inner_join(players, by = c("best_hitter_id" = "player_id"))
sim_awards$league <- ifelse(sim_awards$sub_league_id == 0, 'AL', 'NL')
sim_awards %>% select(first_name, last_name, league, year)
print (sim_awards %>% left_join(pitching_stats, by = c("best_hitter_id" = "player_id", "year" = "year")) %>% filter(split_id == 1) %>% select(first_name, last_name) %>% nrow())
trimed_batting_stats <- players %>% left_join (batting_stats, by=c('player_id'='player_id'))  %>% filter (split_id == 1) %>% filter(position.x != 1) %>% select(year, player_id, first_name, last_name, ab, h, k ,pa, d, t, hr, r, rbi, sb, cs, bb, ibb) %>% filter(ab!=0)
trimed_batting_stats <- trimed_batting_stats %>% mutate(BA=h/ab, OBP=(h+bb+ibb)/(ab+bb+ibb), SLG=(h+d+2*t+3*hr)/ab, HRpercent=hr/ab, BBpercent=(bb+ibb)/pa, Kpercent=k/pa)
trimed_batting_stats <- trimed_batting_stats %>% mutate(ISO=SLG-BA)
trimed_batting_stats %>% arrange(desc(HRpercent)) %>% filter (ab > 300) %>% slice(1:10) %>% select(year,first_name,last_name, HRpercent, hr)
trimed_batting_stats %>% group_by(first_name, last_name) %>% summarize(avg_rbi = mean(rbi), num_years = n()) %>% arrange(desc(avg_rbi)) %>% head(n=10)
homers_by_year <- batting_stats %>% filter(split_id == 1) %>% group_by(year) %>% summarize(sim_homers=sum(hr))
homers_by_year %>% ggplot(mapping=aes(x=year,y=sim_homers)) + geom_point() + geom_line()
sim_and_real_hr_totals <- lahman_hr %>% left_join(homers_by_year, by=c('yearID'='year'))
sim_and_real_hr_totals %>% ggplot(mapping=aes(x=yearID,y=sim_homers-actual_homers)) + geom_point() + geom_line()
(sim_and_real_hr_totals$sim_homers-sim_and_real_hr_totals$actual_homers) %>% abs() %>% mean()
allstars
allstar_stats <- trimed_batting_stats %>% left_join (allstars, by=c("player_id"="all_star","year"))
allstar_stats$was_all_star <- ifelse (is.na(allstar_stats$all_star_pos),-1,1)
allstar_stats_trimed <- allstar_stats %>% select(ab,h,d,t,hr,k,bb,ibb,pa,r,rbi,sb,BA,OBP,SLG,HRpercent,BBpercent,Kpercent,ISO,was_all_star)
allstar_stats_trimed %>% sample_n(10) %>% select(BA,OBP,SLG,was_all_star)
library(ISLR)
library(dplyr)
glm(data=allstar_stats_trimed,was_all_star~(BA+OBP+SLG))
allstar_stats_trimed %>% sample_frac(.1) %>% glm(was_all_star~(BA+OBP+SLG))
traing_set <- allstar_stats_trimed %>% sample_frac(.1)
traing_set %>% glm(was_all_star~(BA+OBP+SLG))
traing_set %>% glm(data=traing_set, was_all_star~(BA+OBP+SLG))
glm(data=traing_set, was_all_star~(BA+OBP+SLG))
model <- glm(data=traing_set, was_all_star~(BA+OBP+SLG))
predict(model, allstar_stats_trimed %>% sample_frac(.1))
allstars
allstar_stats <- trimed_batting_stats %>% left_join (allstars, by=c("player_id"="all_star","year"))
allstar_stats$was_all_star <- ifelse (is.na(allstar_stats$all_star_pos),0,1)
allstar_stats_trimed <- allstar_stats %>% select(ab,h,d,t,hr,k,bb,ibb,pa,r,rbi,sb,BA,OBP,SLG,HRpercent,BBpercent,Kpercent,ISO,was_all_star)
allstar_stats_trimed %>% sample_n(10) %>% select(BA,OBP,SLG,was_all_star)
traing_set <- allstar_stats_trimed %>% sample_frac(.1)
model <- glm(data=traing_set, was_all_star~(BA+OBP+SLG))
predict(model, allstar_stats_trimed %>% sample_frac(.1))
